#include "Fireball.h"



Fireball::Fireball(int maxDuration, int damage, float speed)
{
	m_maxDuration = maxDuration;
	m_damage = damage;
	m_speed = speed;
}

//////////////////////////////////////////////////////////////////////////////////////
//	Returns active state
//////////////////////////////////////////////////////////////////////////////////////
bool Fireball::IsActive()
{
	return m_active;
}

//////////////////////////////////////////////////////////////////////////////////////
//	Sets active state
//////////////////////////////////////////////////////////////////////////////////////
void Fireball::SetActive(bool active)
{
	m_active = active;
}

//////////////////////////////////////////////////////////////////////////////////////
//	Returns damage
//////////////////////////////////////////////////////////////////////////////////////
int Fireball::GetDamage()
{
	return m_damage;
}

//////////////////////////////////////////////////////////////////////////////////////
//	Updates position & duration
//////////////////////////////////////////////////////////////////////////////////////
void Fireball::Update()
{
	//Deactive expired fireball
	if (m_duration == 0)
		m_active = false;

	//Update fireball
	else
	{
		//Move in direction at speed
		m_x += (m_xDirection * m_speed);
		m_y += (m_yDirection * m_speed);
		m_z += (m_zDirection * m_speed);

		//Subtract 1 from duration
		--m_duration;
	}
}

//////////////////////////////////////////////////////////////////////////////////////
//	Move to character's hand and fire
//////////////////////////////////////////////////////////////////////////////////////
void Fireball::Fire(Character * character)
{
	//Set owner
	m_pOwner = character;

	//Move to character's hand
	m_x = m_pOwner->GetXHand();
	m_y = m_pOwner->GetYHand();
	m_z = m_pOwner->GetZHand();

	//Set direction
	m_xDirection = m_x - m_pOwner->GetXPos();
	m_yDirection = m_y - m_pOwner->GetYPos();
	m_zDirection = m_z - m_pOwner->GetZPos();

	//Reset duration
	m_duration = m_maxDuration;

	//Set as active
	m_active = true;
}


Fireball::~Fireball()
{
}
